{% extends 'base.html.twig' %}

{% block title %}Bookmarker 4! - Dashboard{% endblock %}

{% block body %}
    <div class="dashboard">
        <div class="flex-container">
            <nav>
                <div class="logo" style="{% if settings.logo %}background-image:url(/uploads/logos/{{ settings.logo }});{% endif %}"></div>
                <ul>
                    <li class="active"><a href="/dashboard"><i class="fa-solid fa-book-bookmark"></i> Bookmarks</a></li>
                    <li><a href="/categories"><i class="fa-solid fa-folder"></i>Categories</a></li>
                    <li><a href="/groups"><i class="fa-solid fa-box-archive"></i>Groups</a></li>
                    <li><a href="/stats"><i class="fa-solid fa-chart-column"></i>Stats</a></li>
                    <li><a href="/settings"><i class="fa-solid fa-screwdriver-wrench"></i>Settings</a></li>
                    <li><a href="/logout"><i class="fa-solid fa-right-from-bracket"></i>Logout</a></li>
                </ul>
            </nav><!--

        --><main>
                <header>
                    <div class="middle">
                        <div class="search">
                            <input type="text" id="create_filter" placeholder="Filter" />
                            <button id="create_filter_btn"><i class="fa-solid fa-filter-list"></i> Create Filter</button>
                        </div>
                    </div><!--
                --><div class="user">
                        <div class="alerts_icon">
                        <i class="fa-regular fa-bell"></i></div>
                        <div class="profile_pic" style="{% if settings.profilePic %}background-image:url(/uploads/profile_pics/{{ settings.profilePic }});{% endif %}"></div>
                    </div>
                </header>
                <div class="actions_row middle_content_panel full">
                    <div class="actions">
                        Actions:
                        <a class="action_btn" href="/bookmark/add"><i class="fa-solid fa-plus"></i> Add</a>
                    </div><!--
                    --><div class="filters">
                        Filters: 
                    </div>
                </div>
                <div class="topinfo middle_content_panel full">
                        {% set amount = bookmarks|length %}
                        <div class="left">{{ amount }} bookmarks found</div>
                        <div class="right">
                            Sorted By:
                            <select name="bookmark_sort" id="bookmark_sort">
                                <option value="most_clicked">Most Clicked</option>
                                <option value="least_clicked">Least Clicked</option>
                                <option value="newest">Newest</option>
                                <option value="oldest">Oldest</option>
                                <option value="category">Category</option>
                                <option value="random">Random</option>
                            </select>
                        </div>
                    </div>
                <div class="grid middle_content_panel full" id="grid"></div><!--
            --><aside></aside>
            </main>
        </div>
    </div>

    <script>
        $(() => {
            var bookmarks = [
            {% for bookmark in bookmarks %}
                {% if bookmark.clicks > 1000000 %}
                    {% set clicks = (bookmark.clicks / 1000000)|number_format(2) ~ "M" %}
                {% elseif bookmark.clicks > 1000 %}
                    {% set clicks = (bookmark.clicks / 1000)|number_format(1) ~ "K" %}
                {% else %}
                    {% set clicks = bookmark.clicks %}
                {% endif %}
                {id:{{bookmark.id}}, clicks:{{ clicks }}, title:"{{bookmark.title}}", subtitle:"{{ bookmark.subtitle }}", url:"{{ bookmark.location }}", favorite:false, bg:"{{ bookmark.bgImage }}", bgc:"{{ bookmark.bgColor }}", icon:"{{ bookmark.icon }}", iconc:"{{ bookmark.iconColor }}"},
            {% endfor %}    
            ];

            console.log(bookmarks);

            sort($("#bookmark_sort").val());
            displayBookmarks();
            armClicks();

            function sort(sortby){
                
                switch(sortby){
                    case("least_clicked"):
                        bookmarks.sort(function(a, b) {
                            return parseFloat(a.clicks) - parseFloat(b.clicks);
                        });
                        break;
                    case("most_clicked"):
                        bookmarks.sort(function(a, b) {
                            return parseFloat(b.clicks) - parseFloat(a.clicks);
                        });
                        break;
                    case("newest"):
                        bookmarks.sort(function(a, b) {
                            return parseFloat(b.id) - parseFloat(a.id);
                        });
                        break;
                    case("oldest"):
                        bookmarks.sort(function(a, b) {
                            return parseFloat(a.id) - parseFloat(b.id);
                        });
                        break;
                    case("random"):
                        shuffle(bookmarks)
                        break;
                }

                displayBookmarks();
            }

            function armClicks(){
                $(".click_panel").off().on("click", function(){
                    $.post("/bookmark/visit/" + $(this).attr("data-id"));
                    $clicks = $(this).parent().find(".clicks");
                    let clicksNum = parseInt($clicks.attr("data-clicks")) + 1;
                    $clicks.attr("data-clicks", clicksNum);
                    
                    if(clicksNum >= 1000000){
                        $clicks.find("span").html((clicksNum / 1000000).toFixed(2) + "M");
                    } else if( clicksNum >= 1000){
                        $clicks.find("span").html((clicksNum / 1000).toFixed(1) + "K");
                    } else {
                        $clicks.find("span").html(clicksNum);
                    }
                });
            }

            function displayBookmarks(){
                var list = bookmarks;
                $("#grid").empty();

                for(var i=0; i < bookmarks.length; i++){
                    var b = bookmarks[i];

                   
                     var item = "<div class=\"item\" style=\"background-image: url(/uploads/bookmark_backgrounds/"+ b.bg +");\">";

                         item += "<div class=\"bg_color\" style=\"background: linear-gradient(180deg, #"+ b.bgc +" 0%, #" + b.bgc.slice(0,6) +"ff 90%);\"></div>";
                         item += "<div class=\"inner\">";
                         item += "<div class=\"clicks\" data-clicks=\""+ b.clicks +"\"><i class=\"fa-solid fa-hand-pointer\"></i><span>"+ b.clicks +"</span></div>";
                         item += "<div class=\"info\"><i class=\"fa-solid fa-info\"></i></div>";
                         item += "<div class=\"fav "+ (b.favorite) ? "on":"" +"\"><i class=\""+ (b.favorite) ? "fa-solid fa-heart-circle-check" : "fa-regular fa-heart" +"\"></i></div>";
                         item += "<div class=\"logo\" style=\"background-color: #"+ b.iconColor +"; background-image: url(/uploads/bookmark_icons/"+ b.icon +")\"></div>";
                         if(b.subtitle){
                            item += "<div class=\"name\">"+b.title+"</div>";
                            item += "<div class=\"name_sub\">"+b.subtitle+"</div>";
                         } else {
                            item += "<div class=\"name large\">"+b.title+"</div>";
                         }
   
                        item += "</div>";
                        item += "<a href=\""+b.url+"\" target=\"_blank\" class=\"click_panel\" data-id=\""+b.id+"\"></a>";

                        item += "</div>";
   

                    $("#grid").append(item)    
                }
            }

            $("#bookmark_sort").on("change", function(){
                console.log($(this).val());
                sort($(this).val());
            });
        })

        function shuffle(array) {
            let currentIndex = array.length,  randomIndex;

            // While there remain elements to shuffle.
            while (currentIndex != 0) {

                // Pick a remaining element.
                randomIndex = Math.floor(Math.random() * currentIndex);
                currentIndex--;

                // And swap it with the current element.
                [array[currentIndex], array[randomIndex]] = [
                array[randomIndex], array[currentIndex]];
            }

            return array;
        }
    </script>
{% endblock %}
